version: "3.9"

services:
  postgres-db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - app-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always

  db-init:
    image: postgres:13-alpine
    depends_on:
      - postgres-db
    environment:
      - PGHOST=postgres-db
      - PGUSER=${DB_USER}
      - PGPASSWORD=${DB_PASSWORD}
      - PGDATABASE=postgres
    command: >
      sh -c "until psql -c '\\q'; do sleep 1; done &&
            psql -c 'CREATE DATABASE ${DB_NAME};'"
    networks:
      - app-network

  go-app:
    build:
      context: .
    environment:
      - APP_PORT=${APP_PORT}
      - APP_HOST=${APP_HOST}
      - APP_READ_TIMEOUT=${APP_READ_TIMEOUT}
      - APP_DEBUG=${APP_DEBUG}
      - DB_HOST=postgres-db
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SSL_MODE=${DB_SSL_MODE}
      - DB_DEBUG=${DB_DEBUG}
      - DB_MAX_OPEN_CONNECTIONS=${DB_MAX_OPEN_CONNECTIONS}
      - DB_MAX_IDLE_CONNECTIONS=${DB_MAX_IDLE_CONNECTIONS}
      - DB_MAX_LIFETIME_CONNECTIONS=${DB_MAX_LIFETIME_CONNECTIONS}
      - DB_TIMEZONE=${DB_TIMEZONE}
    ports:
      - "${APP_PORT}:${APP_PORT}"
    depends_on:
      - postgres-db
      - db-init
    networks:
      - app-network
    command: ./scripts/wait-for-it.sh postgres-db:5432 -- ./myapp

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
